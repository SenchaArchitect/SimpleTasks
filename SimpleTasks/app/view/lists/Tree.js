/*
 * File: app/view/lists/Tree.js
 *
 * This file was generated by Sencha Architect version 3.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SimpleTasks.view.lists.Tree', {
    extend: 'Ext.tree.Panel',
    alias: 'widget.listTree',

    requires: [
        'SimpleTasks.view.override.lists.Tree'
    ],

    title: 'Lists',
    hideHeaders: true,
    store: 'Lists',

    initComponent: function() {
        var me = this;

        me.addEvents(
            'deleteclick',
            'taskdrop',
            'listdrop'
        );

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'button',
                            iconCls: 'tasks-new-list'
                        },
                        {
                            xtype: 'button',
                            id: 'delete-list-btn',
                            iconCls: 'tasks-delete-list'
                        },
                        {
                            xtype: 'button',
                            iconCls: 'tasks-new-folder'
                        },
                        {
                            xtype: 'button',
                            id: 'delete-folder-btn',
                            iconCls: 'tasks-delete-folder'
                        }
                    ]
                }
            ],
            listeners: {
                beforeedit: {
                    fn: me.handleBeforeEdit,
                    scope: me
                }
            },
            columns: [
                {
                    xtype: 'treecolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var tasksStore = Ext.StoreMgr.lookup('Tasks'),
                            count = 0;

                        (function countTasks(list) {
                            count += tasksStore.queryBy(function(task, id) {
                                // only show count for tasks that are not done
                                return task.get('list_id') === list.get('id') && task.get('done') === false;
                            }).getCount();

                            list.eachChild(function(child) {
                                countTasks(child);
                            });
                        })(record);

                        return value + ' (' + count + ')';
                    },
                    dataIndex: 'name',
                    flex: 1,
                    editor: {
                        xtype: 'textfield',
                        selectOnFocus: true
                    }
                },
                {
                    xtype: 'actioncolumn',
                    handler: function(view, rowIndex, colIndex, item, e) {
                        view.ownerCt.fireEvent('deleteclick', view, rowIndex, colIndex, item, e);
                    },
                    width: 24,
                    tooltip: 'Delete',
                    icon: 'resources/images/delete.png',
                    iconCls: 'x-hidden'
                }
            ]
        });

        me.callParent(arguments);
    },

    handleBeforeEdit: function(editingPlugin, e) {
        return e.record.get('id') !== -1;
    },

    refreshView: function() {
        // refresh the data in the view.  This will trigger the column renderers to run, making sure the task counts are up to date.
        this.getView().refresh();
    }

});